Here is the testbench hierarchy for a loopback-style module.


bsg_double_trouble_pcb
\
|___ bsg_gateway_socket
|      \__
|         |___bsg_gateway_chip
|                \__
|                   |___bsg_nonsynth_clock_gen
|                   |___bsg_nonsynth_clock_gen
|                   |___bsg_nonsynth_reset_gen
|                   |___bsg_guts (#(master_p=1)
|                        \_
|                          |___bsg_comm_link
|                          |
|                           \__bsg_test_node_master
|                              \_
|                                |
|                                 \ individual testbench code for a particular bsg_design
|
\___ bsg_asic_socket
       \__
          |___bsg_chip (THIS MODULE AND BELOW IS SYNTHESIZED)
                 \__
                    |___bsg_guts #(master_p=0)
                        \_
                         |___bsg_comm_link
                         |
                         \___bsg_test_node_client
                             \_
                               |
                                \ FSB node for ASIC

Note:

a. The file bsg_designs/toplevels/bsg_two_loopback/tcl/filelist.tcl
   gives the list of verilog files (and paths!) that make up bsg_chip, which goes into real silicon.
   
b. The file bsg_designs/toplevels/bsg_two_loopback/testing/filelist.tcl
   gives the list of verilog files  (and paths!)  that are in the testbench (basically everything except bsg_chip.) Does not need to be synthesizeable
   unless you want to run in the FPGA next to the ASIC, for example in the RealTrouble board.

How to create your own loopback-style design foo:

a. Copy bsg_designs/toplevels/bsg_two_loopback, to bsg_designs/toplevels/bsg_two_foo
b. Copy $bsg_designs_dir/modules/bsg_guts/loopback/bsg_test_node_client.v to bsg_designs/toplevels/bsg_two_foo/v/.
c. Copy $bsg_designs_dir/modules/bsg_guts/loopback/bsg_test_node_master.v to bsg_designs/toplevels/bsg_two_foo/testing/.
d. Modify the bsg_test_node_client.v to instantiate your design (DUT). Don't change the interface, module name or file name.
e. Modify the bsg_test_node_master.v to instantiate your tester code. Don't change the interface, module name or file name.
f. Update the paths of those two files in tcl/filelist.tcl, and testing/filelist.tcl.
g. Simulate with VCS. Our VCS setup is in chip/bsg_one_loopback/testing/rtl. You edit chip/bsg_one_loopback/Makefile.include to specify which bsg_design you want to run.

